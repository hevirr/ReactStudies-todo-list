{"version":3,"sources":["context.js","Todo/TodoItem.js","Todo/TodoList.js","Modal/modal.js","Loader.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","styles","li","display","justifyContent","alignItems","padding","border","borderRadius","marginBottom","input","marginRight","TodoItem","todo","index","onChange","removeTodo","useContext","classes","completed","push","style","className","join","type","checked","id","title","onClick","bind","ul","listStyle","margin","TodoList","props","todos","map","onToggle","Modal","state","isOpen","Fragment","setState","this","Component","Loader","AddTodo","lazy","App","useState","setTodos","loading","setLoading","useEffect","fetch","then","response","json","setTimeout","Provider","value","filter","Suspense","fallback","onCreate","concat","Date","now","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47f3e43f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Context = React.createContext();\r\n\r\nexport default Context;","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Context from '../context';\r\n\r\nconst styles = {\r\n    li: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        padding: '.5rem 1rem',\r\n        border: '1px solid #ccc',\r\n        borderRadius: '4px',\r\n        marginBottom: '.5rem'\r\n    },\r\n    input: {\r\n        marginRight: '1rem'\r\n    }\r\n}\r\n\r\nfunction TodoItem({ todo, index, onChange }) {\r\n    const {removeTodo} = useContext(Context);\r\n    let classes = [];\r\n\r\n    if (todo.completed) {\r\n        classes.push('done')\r\n    }\r\n\r\n    return (\r\n        <li style={styles.li}>\r\n            <span className={classes.join(' ')}>\r\n                <input \r\n                    type=\"checkbox\"\r\n                    checked={todo.completed}\r\n                    style={styles.input} \r\n                    onChange={() => onChange(todo.id)}\r\n                />\r\n                <strong>{index + 1}</strong>\r\n                &nbsp;\r\n                {todo.title}\r\n            </span>\r\n            <button className='rm' onClick={removeTodo.bind(null, todo.id)}>\r\n                &times;\r\n            </button>\r\n        </li>\r\n    )\r\n}\r\n\r\nTodoItem.propTypes = {\r\n    todo: PropTypes.object.isRequired,\r\n    index: PropTypes.number,\r\n    onChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TodoItem from './TodoItem';\r\n\r\nconst styles = {\r\n    ul: {\r\n        listStyle: 'none',\r\n        margin: 0,\r\n        padding: 0\r\n    }\r\n}\r\n\r\nfunction TodoList(props) {\r\n    return (\r\n        <ul style={styles.ul}>\r\n            { props.todos.map((todo, index) => {\r\n                return  (\r\n                    <TodoItem \r\n                        todo={todo} \r\n                        key={todo.id} \r\n                        index={index} \r\n                        onChange={props.onToggle}\r\n                    />\r\n                )\r\n            }) }\r\n        </ul>\r\n    )\r\n}\r\n\r\nTodoList.propTypes = {\r\n    todos: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onToggle: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\r\nimport './modal.css';\r\n\r\nexport default class Modal extends React.Component {\r\n  state = {\r\n    isOpen: false\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <button onClick={() => this.setState({ isOpen: true })}>Open modal</button>\r\n\r\n       {this.state.isOpen && <div className=\"modal\">\r\n          <div className=\"modal-body\">\r\n            <h1>Modal title</h1>\r\n            <p>I am modal window</p>\r\n            <button onClick={() => this.setState({ isOpen: false })}>Close modal</button>\r\n          </div>\r\n        </div>}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}","import React from 'react';\r\n\r\nexport default function Loader() { \r\n  return (\r\n    <div style={ {\r\n        display: 'flex',\r\n        justifyContent: 'center', \r\n        margin: '.5rem'\r\n        } }>\r\n      <div className=\"lds-dual-ring\"></div>\r\n    </div>\r\n  )\r\n}","import React, { useEffect } from 'react';\nimport TodoList from './Todo/TodoList';\nimport Context from './context';\nimport Modal from './Modal/modal';\nimport Loader from './Loader';\n\nconst AddTodo = React.lazy(() => import ('./Todo/AddTodo'));\n\nfunction App() {\n  const [todos, setTodos] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/todos?_limit=5')\n      .then(response => response.json())\n      .then(todos => {\n        setTimeout(() => {\n          setTodos(todos);\n          setLoading(false);\n        }, 1500);\n      })\n  }, []);\n\n  function toggleTodo(id) {\n    setTodos(\n      todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed\n        }\n        return todo;\n      })\n    )\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter(todo => todo.id !== id))\n  }\n\n  function addTodo(title) {\n    setTodos(\n      todos.concat([\n        {\n          title,\n          id: Date.now(),\n          completed: false\n        }\n      ])\n    )\n  }\n\n  return (\n    <Context.Provider value={{ removeTodo }}>\n      <div className=\"wrapper\">\n        <h1>React Tutorial</h1>\n        <Modal />\n\n        <React.Suspense fallback={ <p>Loading...</p> }>  \n          <AddTodo onCreate={addTodo}/>\n        </React.Suspense>\n\n        {loading && <Loader/>}\n        {todos.length ? (\n          <TodoList todos={todos} onToggle={toggleTodo} />\n        ) : loading ? null : (\n          <p>No todos</p>\n        )}\n      </div>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}